// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chat.proto

package chat

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ListMessagesResponse struct {
	Messages             []*Message `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListMessagesResponse) Reset()         { *m = ListMessagesResponse{} }
func (m *ListMessagesResponse) String() string { return proto.CompactTextString(m) }
func (*ListMessagesResponse) ProtoMessage()    {}
func (*ListMessagesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{0}
}

func (m *ListMessagesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListMessagesResponse.Unmarshal(m, b)
}
func (m *ListMessagesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListMessagesResponse.Marshal(b, m, deterministic)
}
func (m *ListMessagesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMessagesResponse.Merge(m, src)
}
func (m *ListMessagesResponse) XXX_Size() int {
	return xxx_messageInfo_ListMessagesResponse.Size(m)
}
func (m *ListMessagesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMessagesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListMessagesResponse proto.InternalMessageInfo

func (m *ListMessagesResponse) GetMessages() []*Message {
	if m != nil {
		return m.Messages
	}
	return nil
}

type SendMessageRequest struct {
	Message              *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendMessageRequest) Reset()         { *m = SendMessageRequest{} }
func (m *SendMessageRequest) String() string { return proto.CompactTextString(m) }
func (*SendMessageRequest) ProtoMessage()    {}
func (*SendMessageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{1}
}

func (m *SendMessageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendMessageRequest.Unmarshal(m, b)
}
func (m *SendMessageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendMessageRequest.Marshal(b, m, deterministic)
}
func (m *SendMessageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendMessageRequest.Merge(m, src)
}
func (m *SendMessageRequest) XXX_Size() int {
	return xxx_messageInfo_SendMessageRequest.Size(m)
}
func (m *SendMessageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendMessageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendMessageRequest proto.InternalMessageInfo

func (m *SendMessageRequest) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

type RecieveMessageResponse struct {
	Message              *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecieveMessageResponse) Reset()         { *m = RecieveMessageResponse{} }
func (m *RecieveMessageResponse) String() string { return proto.CompactTextString(m) }
func (*RecieveMessageResponse) ProtoMessage()    {}
func (*RecieveMessageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{2}
}

func (m *RecieveMessageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecieveMessageResponse.Unmarshal(m, b)
}
func (m *RecieveMessageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecieveMessageResponse.Marshal(b, m, deterministic)
}
func (m *RecieveMessageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecieveMessageResponse.Merge(m, src)
}
func (m *RecieveMessageResponse) XXX_Size() int {
	return xxx_messageInfo_RecieveMessageResponse.Size(m)
}
func (m *RecieveMessageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RecieveMessageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RecieveMessageResponse proto.InternalMessageInfo

func (m *RecieveMessageResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

type Message struct {
	Username             string               `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Body                 string               `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	SentAt               *timestamp.Timestamp `protobuf:"bytes,3,opt,name=sent_at,json=sentAt,proto3" json:"sent_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{3}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Message) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *Message) GetSentAt() *timestamp.Timestamp {
	if m != nil {
		return m.SentAt
	}
	return nil
}

func init() {
	proto.RegisterType((*ListMessagesResponse)(nil), "chat.ListMessagesResponse")
	proto.RegisterType((*SendMessageRequest)(nil), "chat.SendMessageRequest")
	proto.RegisterType((*RecieveMessageResponse)(nil), "chat.RecieveMessageResponse")
	proto.RegisterType((*Message)(nil), "chat.Message")
}

func init() { proto.RegisterFile("chat.proto", fileDescriptor_8c585a45e2093e54) }

var fileDescriptor_8c585a45e2093e54 = []byte{
	// 297 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0x4f, 0x4f, 0xf2, 0x40,
	0x10, 0xc6, 0xd9, 0x17, 0x02, 0xbc, 0x83, 0x5e, 0x26, 0x86, 0x34, 0xab, 0x89, 0xa4, 0x17, 0xf1,
	0x52, 0x0c, 0x9c, 0x3d, 0x10, 0xf4, 0xa4, 0x5e, 0xaa, 0x77, 0xb3, 0xc0, 0x08, 0x4d, 0xdc, 0xdd,
	0xca, 0x4e, 0x4d, 0xf8, 0x28, 0x7e, 0x5b, 0xc3, 0x6e, 0xdb, 0x18, 0xcb, 0xc1, 0xdb, 0xec, 0xf3,
	0x3c, 0xf3, 0x27, 0xbf, 0x05, 0x58, 0x6d, 0x15, 0x27, 0xf9, 0xce, 0xb2, 0xc5, 0xce, 0xa1, 0x96,
	0xe7, 0x1b, 0x6b, 0x37, 0xef, 0x34, 0xf1, 0xda, 0xb2, 0x78, 0x9b, 0x90, 0xce, 0x79, 0x1f, 0x22,
	0xf2, 0xf2, 0xb7, 0xc9, 0x99, 0x26, 0xc7, 0x4a, 0xe7, 0x21, 0x10, 0xcf, 0xe1, 0xec, 0x31, 0x73,
	0xfc, 0x44, 0xce, 0xa9, 0x0d, 0xb9, 0x94, 0x5c, 0x6e, 0x8d, 0x23, 0xbc, 0x86, 0xbe, 0x2e, 0xb5,
	0x48, 0x8c, 0xda, 0xe3, 0xc1, 0xf4, 0x34, 0xf1, 0xab, 0xcb, 0x64, 0x5a, 0xdb, 0xf1, 0x2d, 0xe0,
	0x33, 0x99, 0x75, 0x65, 0xd0, 0x47, 0x41, 0x8e, 0xf1, 0x0a, 0x7a, 0x65, 0x22, 0x12, 0x23, 0xd1,
	0xec, 0xaf, 0xdc, 0x78, 0x0e, 0xc3, 0x94, 0x56, 0x19, 0x7d, 0x52, 0x3d, 0xa1, 0xbc, 0xe1, 0xcf,
	0x23, 0x0c, 0xf4, 0x4a, 0x0d, 0x25, 0xf4, 0x0b, 0x47, 0x3b, 0xa3, 0x74, 0x68, 0xfa, 0x9f, 0xd6,
	0x6f, 0x44, 0xe8, 0x2c, 0xed, 0x7a, 0x1f, 0xfd, 0xf3, 0xba, 0xaf, 0x71, 0x06, 0x3d, 0x47, 0x86,
	0x5f, 0x15, 0x47, 0x6d, 0xbf, 0x43, 0x26, 0x01, 0x59, 0x52, 0x21, 0x4b, 0x5e, 0x2a, 0x64, 0x69,
	0xf7, 0x10, 0x9d, 0xf3, 0xf4, 0x4b, 0x40, 0x67, 0xb1, 0x55, 0x8c, 0x77, 0x70, 0xf2, 0x93, 0x1e,
	0x0e, 0x1b, 0xcd, 0xf7, 0x87, 0xcf, 0x90, 0x32, 0x1c, 0x7e, 0x8c, 0x74, 0xdc, 0xc2, 0x07, 0x18,
	0x2c, 0xac, 0xd6, 0x85, 0xc9, 0x56, 0x8a, 0x09, 0xa3, 0x10, 0x6e, 0x32, 0x95, 0x17, 0xc1, 0x39,
	0x8e, 0x2b, 0x6e, 0x8d, 0xc5, 0x8d, 0x58, 0x76, 0xfd, 0xea, 0xd9, 0x77, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xa9, 0xfb, 0x1d, 0xc2, 0x29, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ChatClient is the client API for Chat service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatClient interface {
	ListMessages(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ListMessagesResponse, error)
	Communicate(ctx context.Context, opts ...grpc.CallOption) (Chat_CommunicateClient, error)
}

type chatClient struct {
	cc *grpc.ClientConn
}

func NewChatClient(cc *grpc.ClientConn) ChatClient {
	return &chatClient{cc}
}

func (c *chatClient) ListMessages(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ListMessagesResponse, error) {
	out := new(ListMessagesResponse)
	err := c.cc.Invoke(ctx, "/chat.Chat/ListMessages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) Communicate(ctx context.Context, opts ...grpc.CallOption) (Chat_CommunicateClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Chat_serviceDesc.Streams[0], "/chat.Chat/Communicate", opts...)
	if err != nil {
		return nil, err
	}
	x := &chatCommunicateClient{stream}
	return x, nil
}

type Chat_CommunicateClient interface {
	Send(*SendMessageRequest) error
	Recv() (*RecieveMessageResponse, error)
	grpc.ClientStream
}

type chatCommunicateClient struct {
	grpc.ClientStream
}

func (x *chatCommunicateClient) Send(m *SendMessageRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *chatCommunicateClient) Recv() (*RecieveMessageResponse, error) {
	m := new(RecieveMessageResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ChatServer is the server API for Chat service.
type ChatServer interface {
	ListMessages(context.Context, *empty.Empty) (*ListMessagesResponse, error)
	Communicate(Chat_CommunicateServer) error
}

// UnimplementedChatServer can be embedded to have forward compatible implementations.
type UnimplementedChatServer struct {
}

func (*UnimplementedChatServer) ListMessages(ctx context.Context, req *empty.Empty) (*ListMessagesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListMessages not implemented")
}
func (*UnimplementedChatServer) Communicate(srv Chat_CommunicateServer) error {
	return status.Errorf(codes.Unimplemented, "method Communicate not implemented")
}

func RegisterChatServer(s *grpc.Server, srv ChatServer) {
	s.RegisterService(&_Chat_serviceDesc, srv)
}

func _Chat_ListMessages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).ListMessages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.Chat/ListMessages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).ListMessages(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_Communicate_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ChatServer).Communicate(&chatCommunicateServer{stream})
}

type Chat_CommunicateServer interface {
	Send(*RecieveMessageResponse) error
	Recv() (*SendMessageRequest, error)
	grpc.ServerStream
}

type chatCommunicateServer struct {
	grpc.ServerStream
}

func (x *chatCommunicateServer) Send(m *RecieveMessageResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *chatCommunicateServer) Recv() (*SendMessageRequest, error) {
	m := new(SendMessageRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Chat_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chat.Chat",
	HandlerType: (*ChatServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListMessages",
			Handler:    _Chat_ListMessages_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Communicate",
			Handler:       _Chat_Communicate_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "chat.proto",
}
